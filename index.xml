<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>thalesbruno</title>
    <link>https://thalesbruno.github.io/</link>
    <description>Recent content on thalesbruno</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 02 Apr 2021 22:33:59 -0300</lastBuildDate>
    
	<atom:link href="https://thalesbruno.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django and Bootstrap: basic setup</title>
      <link>https://thalesbruno.github.io/posts/django-bootstrap/</link>
      <pubDate>Fri, 02 Apr 2021 22:33:59 -0300</pubDate>
      
      <guid>https://thalesbruno.github.io/posts/django-bootstrap/</guid>
      <description>The purpose here is to create a basic setup of a Django project already integrated with Bootstrap and Font Awesome, which can be the base of your projects.
If you want to check out the code, just go to the Github repository page here.
Create the Django project First of all, we create the project root directory
~: $ mkdir project ~: $ cd project/ So, we set up a Python virtual environment called venv where we will install the dependencies of our project.</description>
    </item>
    
    <item>
      <title>Criando um Bot do Telegram com Node.js</title>
      <link>https://thalesbruno.github.io/posts/criando-bot-telegram-nodejs/</link>
      <pubDate>Tue, 16 Mar 2021 05:22:28 -0300</pubDate>
      
      <guid>https://thalesbruno.github.io/posts/criando-bot-telegram-nodejs/</guid>
      <description>Olá, pessoal. Este é meu primeiro artigo por aqui e nele vamos aprender a fazer um Bot do Telegram que monitora serviços através de requisições HTTP. Fiz em Javascript/Node.js porque era a linguagem que eu vinha estudando ultimamente então foi uma boa oportunidade de aplicá-la e eu gostei do resultado.
As tecnologias trabalhadas aqui foram o Node.js, o Telegraf, que é um framework para construir Bots do Telegram em Node, o Axios, um cliente HTTP em Javascript, e o Docker para dar um toque mais profissional, rs.</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>https://thalesbruno.github.io/portfolio/</link>
      <pubDate>Tue, 28 Jul 2020 19:26:13 -0300</pubDate>
      
      <guid>https://thalesbruno.github.io/portfolio/</guid>
      <description>Github Finder ↗️
React project using Hooks that fetch data from Github API.
Code here.
Weather Forecast App ↗️
Node.js full stack project. Uses mapbox and darksky APIs.
Code here.
Movie Recommendation API
Machine Learning project: movie recommendation by text similarity. Python ML tools and FastAPI.
Code here.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://thalesbruno.github.io/about/</link>
      <pubDate>Tue, 23 Jun 2020 21:06:54 -0300</pubDate>
      
      <guid>https://thalesbruno.github.io/about/</guid>
      <description>Hello there! I’m from Salvador, Brazil. I have worked as Linux System Administrator for 3+ years as well as a Web Developer enthusiast. Now I am really excited to begin a new career as formal Web Developer. My stack is mainly based on Python, but I am always ready to learn new stuff.
This is my homepage where you can see my porfolio and some Web Dev related posts.</description>
    </item>
    
  </channel>
</rss>